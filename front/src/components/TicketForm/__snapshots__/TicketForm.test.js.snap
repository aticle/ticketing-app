// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TicketForm /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TicketForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Create Ticket
        </h2>,
        <TextField
          id="title"
          label="Title"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />,
        <TextField
          id="description"
          label="Description"
          onChange={[Function]}
          required={true}
          select={false}
          value=""
          variant="standard"
        />,
        <WithStyles(Button)
          id="submit"
          type="submit"
          variant="contained"
        >
          SUBMIT
        </WithStyles(Button)>,
      ],
      "className": "create-ticket-form",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Create Ticket",
        },
        "ref": null,
        "rendered": "Create Ticket",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "id": "title",
          "label": "Title",
          "onChange": [Function],
          "required": true,
          "select": false,
          "value": "",
          "variant": "standard",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "id": "description",
          "label": "Description",
          "onChange": [Function],
          "required": true,
          "select": false,
          "value": "",
          "variant": "standard",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "SUBMIT",
          "id": "submit",
          "type": "submit",
          "variant": "contained",
        },
        "ref": null,
        "rendered": "SUBMIT",
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Create Ticket
          </h2>,
          <TextField
            id="title"
            label="Title"
            onChange={[Function]}
            required={true}
            select={false}
            value=""
            variant="standard"
          />,
          <TextField
            id="description"
            label="Description"
            onChange={[Function]}
            required={true}
            select={false}
            value=""
            variant="standard"
          />,
          <WithStyles(Button)
            id="submit"
            type="submit"
            variant="contained"
          >
            SUBMIT
          </WithStyles(Button)>,
        ],
        "className": "create-ticket-form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create Ticket",
          },
          "ref": null,
          "rendered": "Create Ticket",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "title",
            "label": "Title",
            "onChange": [Function],
            "required": true,
            "select": false,
            "value": "",
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "description",
            "label": "Description",
            "onChange": [Function],
            "required": true,
            "select": false,
            "value": "",
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "SUBMIT",
            "id": "submit",
            "type": "submit",
            "variant": "contained",
          },
          "ref": null,
          "rendered": "SUBMIT",
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenThreeAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
