// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form>
        <TextField
          id="user"
          label="user"
          onChange={[Function]}
          required={true}
          select={false}
          type="email"
          value=""
          variant="standard"
        />
        <TextField
          id="password"
          label="password"
          onChange={[Function]}
          required={true}
          select={false}
          type="password"
          value=""
          variant="standard"
        />
      </form>,
      "className": "login-wrapper",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <TextField
            id="user"
            label="user"
            onChange={[Function]}
            required={true}
            select={false}
            type="email"
            value=""
            variant="standard"
          />,
          <TextField
            id="password"
            label="password"
            onChange={[Function]}
            required={true}
            select={false}
            type="password"
            value=""
            variant="standard"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "user",
            "label": "user",
            "onChange": [Function],
            "required": true,
            "select": false,
            "type": "email",
            "value": "",
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "password",
            "label": "password",
            "onChange": [Function],
            "required": true,
            "select": false,
            "type": "password",
            "value": "",
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form>
          <TextField
            id="user"
            label="user"
            onChange={[Function]}
            required={true}
            select={false}
            type="email"
            value=""
            variant="standard"
          />
          <TextField
            id="password"
            label="password"
            onChange={[Function]}
            required={true}
            select={false}
            type="password"
            value=""
            variant="standard"
          />
        </form>,
        "className": "login-wrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <TextField
              id="user"
              label="user"
              onChange={[Function]}
              required={true}
              select={false}
              type="email"
              value=""
              variant="standard"
            />,
            <TextField
              id="password"
              label="password"
              onChange={[Function]}
              required={true}
              select={false}
              type="password"
              value=""
              variant="standard"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "user",
              "label": "user",
              "onChange": [Function],
              "required": true,
              "select": false,
              "type": "email",
              "value": "",
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "password",
              "label": "password",
              "onChange": [Function],
              "required": true,
              "select": false,
              "type": "password",
              "value": "",
              "variant": "standard",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenThreeAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
