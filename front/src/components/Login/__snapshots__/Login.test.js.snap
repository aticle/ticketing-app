// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Login
        </h2>,
        <TextField
          id="email"
          label="email"
          onChange={[Function]}
          required={true}
          select={false}
          type="email"
          value=""
          variant="standard"
        />,
        <TextField
          id="password"
          label="password"
          onChange={[Function]}
          required={true}
          select={false}
          type="password"
          value=""
          variant="standard"
        />,
        <WithStyles(Button)
          id="submit"
          type="submit"
          variant="contained"
        >
          LOGIN
        </WithStyles(Button)>,
      ],
      "className": "login",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Login",
        },
        "ref": null,
        "rendered": "Login",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "id": "email",
          "label": "email",
          "onChange": [Function],
          "required": true,
          "select": false,
          "type": "email",
          "value": "",
          "variant": "standard",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "id": "password",
          "label": "password",
          "onChange": [Function],
          "required": true,
          "select": false,
          "type": "password",
          "value": "",
          "variant": "standard",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "LOGIN",
          "id": "submit",
          "type": "submit",
          "variant": "contained",
        },
        "ref": null,
        "rendered": "LOGIN",
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Login
          </h2>,
          <TextField
            id="email"
            label="email"
            onChange={[Function]}
            required={true}
            select={false}
            type="email"
            value=""
            variant="standard"
          />,
          <TextField
            id="password"
            label="password"
            onChange={[Function]}
            required={true}
            select={false}
            type="password"
            value=""
            variant="standard"
          />,
          <WithStyles(Button)
            id="submit"
            type="submit"
            variant="contained"
          >
            LOGIN
          </WithStyles(Button)>,
        ],
        "className": "login",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Login",
          },
          "ref": null,
          "rendered": "Login",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "email",
            "label": "email",
            "onChange": [Function],
            "required": true,
            "select": false,
            "type": "email",
            "value": "",
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "password",
            "label": "password",
            "onChange": [Function],
            "required": true,
            "select": false,
            "type": "password",
            "value": "",
            "variant": "standard",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "LOGIN",
            "id": "submit",
            "type": "submit",
            "variant": "contained",
          },
          "ref": null,
          "rendered": "LOGIN",
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenThreeAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
